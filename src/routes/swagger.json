{
  "swagger": "2.0",
  "info": {
    "description": "This is the backend core of a project that is supposed to mimick the logic of StackOverflow's basic features of users creating questions and other users ansering them",
    "version": "1.0.0",
    "title": "Stackoverflow-lite",
    "contact": {
      "email": "darlingtonamz@gmail.com"
    }
  },
  "host": "localhost",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "login",
      "description": "Login into the system"
    },
    {
      "name": "register",
      "description": "Registering a new user"
    },
    {
      "name": "questions",
      "description": "Access to Questions users ask of the platform"
    },
    {
      "name": "answers",
      "description": "Answers to questions on the system"
    },
    {
      "name": "answer_votes",
      "description": "Votes to answers"
    },
    {
      "name": "answer_comments",
      "description": "Comments on answers"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "User can login",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "login",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          },
          "422": {
            "description": "Unprocessible"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "register"
        ],
        "summary": "User can register",
        "description": "",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "New users properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Unprocessible"
          }
        }
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Fetch list of questions",
        "description": "",
        "operationId": "question_list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "description": "filter by title",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "filter by user_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation returns array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            }
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "questions"
        ],
        "summary": "Create a question",
        "description": "",
        "operationId": "question_create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "New question payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/questions/{id}": {
      "patch": {
        "tags": [
          "questions"
        ],
        "summary": "Updating a specific question",
        "description": "",
        "operationId": "question_update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of question to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New question payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Couldn't find Question"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "questions"
        ],
        "summary": "Deleting a specific question",
        "description": "",
        "operationId": "question_delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of question to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "integer",
              "description": "ID of the deleted question"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Couldn't find Question"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/questions/{question_id}/answers": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Fetch list of answers",
        "description": "",
        "operationId": "answer_list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "description": "Parent question",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation returns array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Answer"
              }
            }
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Create an answer",
        "description": "",
        "operationId": "answer_create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "description": "Parent question",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New answer payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/questions/{question_id}/answers/{answer_id}": {
      "patch": {
        "tags": [
          "answers"
        ],
        "summary": "Updating an answer",
        "description": "",
        "operationId": "answer_update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "description": "Parent question",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "answer_id",
            "description": "Selected answer ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "Editted answer payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation returns array",
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          },
          "404": {
            "description": "Couldn't find Question or Answer"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "put": {
        "tags": [
          "answers"
        ],
        "summary": "Marking an answer as correct",
        "description": "",
        "operationId": "mark_answer_correct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "description": "Parent question",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "answer_id",
            "description": "Selected answer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation returns array",
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          "404": {
            "description": "Couldn't find Question or Answer"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "answers"
        ],
        "summary": "Deleting an answer",
        "description": "",
        "operationId": "answer_delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "description": "Parent question",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "answer_id",
            "description": "Selected answer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "404": {
            "description": "Couldn't find Question or Answer"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/answers/{answer_id}/answer_votes": {
      "post": {
        "tags": [
          "answer_votes"
        ],
        "summary": "Vote for an answer",
        "description": "",
        "operationId": "answer_vote_create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "answer_id",
            "description": "Parent answer ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New answer_vote payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerVotePayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/AnswerVote"
            }
          },
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/AnswerVote"
            }
          },
          "404": {
            "description": "Couldn't find Answer"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/answers/{answer_id}/answer_comments": {
      "get": {
        "tags": [
          "answer_comments"
        ],
        "summary": "List of comments for an answer",
        "description": "",
        "operationId": "answer_comment_list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "answer_id",
            "description": "Parent answer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnswerComment"
              }
            }
          },
          "404": {
            "description": "Couldn't find Answer"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "answer_comments"
        ],
        "summary": "Creating a comment for an answer",
        "description": "",
        "operationId": "answer_comment_create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "answer_id",
            "description": "Parent answer ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New answer_comment payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerCommentPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/AnswerComment"
            }
          },
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/AnswerComment"
            }
          },
          "404": {
            "description": "Couldn't find Answer"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    },
    "/answers/{answer_id}/answer_comments/{answer_comment_id}": {
      "delete": {
        "tags": [
          "answer_comments"
        ],
        "summary": "Delete a comment from an answer",
        "description": "",
        "operationId": "answer_comment_delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "answer_id",
            "description": "Parent answer ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "answer_comment_id",
            "description": "Parent answer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/AnswerComment"
            }
          },
          "404": {
            "description": "Couldn't find Answer or AnswerComment"
          },
          "422": {
            "description": "Unprocessible"
          }
        },
        "security": [
          {
            "jwt": [

            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "user": {
          "type": "object"
        }
      }
    },
    "Register": {
      "type": "object",
      "properties": {
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "QuestionPayload": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        },
        "accepted_answer_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Question"
      }
    },
    "AnswerPayload": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "Answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "body": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        },
        "question_id": {
          "type": "integer"
        },
        "votes": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "AnswerVotePayload": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "description": "-1 >= value <= 1"
        }
      }
    },
    "AnswerVote": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "answer_id": {
          "type": "integer"
        },
        "value": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "AnswerCommentPayload": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "description": "-1 >= value <= 1"
        }
      }
    },
    "AnswerComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "answer_id": {
          "type": "integer"
        },
        "body": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    }
  }
}